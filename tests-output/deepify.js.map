{"version":3,"sources":["webpack://deepify/webpack/universalModuleDefinition","webpack://deepify/webpack/bootstrap","webpack://deepify/./src/shared/regex.expressions.js","webpack://deepify/./src/shared/helpers.js","webpack://deepify/./src/set/set.helpers.js","webpack://deepify/./src/get/get.helpers.js","webpack://deepify/./src/deepifyGet.js","webpack://deepify/./src/deepifySet.js","webpack://deepify/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","emptyArrayRegxp","indexArrayRegxp","indexArrayRefRegxp","numberRegex","arrayBrackets","_regex","getIndexFromPropName","propertyName","parseInt","concat","_toConsumableArray","match","replace","_helpers","isMutable","mutate","ref","deepCopy","objRef","_typeof","JSON","parse","stringify","setProperty","length","nestedProps","split","top","_ref","forEach","prop","index","assign","propName","push","setEmptyArray","propIndex","cleanPropName","Array","lenght","splice","setArrayAtPosition","element","setEmptyArrayReference","newRef","currentRef","setArrayReferenceAtPosition","getArrayAtPosition","getArrayRef","arrayProperty","getProperty","arguments","undefined","props","_get","deepifyGet","obj","_set","deepifyConfiguration","configure","deepifySet","_deepifySet","_deepifyGet"],"mappings":"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","file":"lib/deepify.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"deepify\"] = factory();\n\telse\n\t\troot[\"deepify\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 50);\n","export const emptyArrayRegxp = /\\[\\]$/;\nexport const indexArrayRegxp = /\\[\\d+\\]$/;\nexport const indexArrayRefRegxp = /\\[\\d+\\]\\[\\]$/;\nexport const numberRegex = /^\\d+$/;\nexport const arrayBrackets = /[\\[\\]]/gi;\n","import { indexArrayRegxp, arrayBrackets } from './regex.expressions';\n\nexport const getIndexFromPropName = (propertyName) => parseInt([...propertyName.match(indexArrayRegxp)][0].replace(arrayBrackets, ''), 10);\n","import { emptyArrayRegxp, indexArrayRegxp, numberRegex, arrayBrackets } from '../shared/regex.expressions';\nimport { getIndexFromPropName } from '../shared/helpers';\n\nexport const isMutable = (mutate, ref) => {\n  if (typeof mutate === 'boolean') {\n    return mutate;\n  } else if(ref && typeof ref.mutate === 'boolean') {\n    return ref.mutate;\n  }\n  return false;\n};\n\nexport const deepCopy = (objRef) =>\n  objRef !== null &&\n  typeof objRef !== 'undefined' &&\n  typeof objRef === 'object' ? JSON.parse(JSON.stringify(objRef)) : null;\n\nconst setEmptyArray = (ref, propertyName, value) => {\n  let _ref = Object.assign(ref);\n  const propName = propertyName.replace(emptyArrayRegxp, '');\n  _ref[propName] = [];\n  if(typeof value !== 'undefined') {\n    _ref[propName].push(value);\n  }\n  _ref = _ref[propName];\n  return _ref;\n};\n\nconst setEmptyArrayReference = (ref, propertyName) => {\n  // this method is not returnign the right reference\n  let _ref = Object.assign(ref);\n  const propName = propertyName.replace(emptyArrayRegxp, '');\n  _ref[propName] = [];\n  _ref = _ref[propName];\n  return _ref;\n};\n\n\nconst setArrayAtPosition = (ref, propertyName, value) => {\n  let _ref = Object.assign(ref);\n  const propIndex = getIndexFromPropName(propertyName);\n  const cleanPropName = propertyName.replace(indexArrayRegxp, '');\n   if(_ref[cleanPropName] instanceof Array) {\n     if(propIndex > _ref[cleanPropName].lenght) {\n       _ref[cleanPropName].push(value);\n     } else {\n       _ref[cleanPropName].splice(propIndex, 0, value);\n     }\n   } else {\n     _ref[cleanPropName] = [value];\n   }\n   return _ref;\n};\n\nconst setArrayReferenceAtPosition = (ref, propertyName) => {\n  let _ref = Object.assign(ref);\n  const propIndex = getIndexFromPropName(propertyName);\n  const cleanPropName = propertyName.replace(indexArrayRegxp, '');\n  const newRef = {};\n  if(_ref[cleanPropName] instanceof Array) {\n    if(propIndex > _ref[cleanPropName].lenght) {\n      _ref[cleanPropName].push(newRef);\n      return newRef;\n    } else {\n      /*_ref[cleanPropName].splice(propIndex, 0, newRef);\n      return newRef;*/\n      const currentRef = _ref[cleanPropName][propIndex];\n      if(typeof currentRef !== 'undefined') {\n        return currentRef;\n      } else {\n        ref[cleanPropName].splice(propIndex, 0, newRef);\n        return newRef;\n      }\n    }\n  } else {\n    _ref[cleanPropName] = [newRef];\n    return newRef;\n  }\n  return newRef;\n};\n\nexport const setProperty = (ref, propertyName, value) => {\n  if (typeof propertyName === 'string' && propertyName.length > 0) {\n    const nestedProps = propertyName.split('.');\n    const top = nestedProps.length;\n    let _ref = ref;\n\n    nestedProps.forEach((prop, index) => {\n        if((index+1) === top) {\n          if (prop.match(emptyArrayRegxp)) {\n            _ref = setEmptyArray(_ref, prop, value);\n          } else if(prop.match(indexArrayRegxp)) {\n            _ref = setArrayAtPosition(_ref, prop, value);\n          } else {\n            if (_ref instanceof Array) {\n              const element = {\n                [prop]: value\n              };\n              _ref.push(element);\n            } else {\n              _ref[prop] = value;\n            }\n          }\n        } else {\n          if(_ref && _ref.hasOwnProperty(prop)) {\n            _ref = _ref[prop];\n          } else {\n            if (prop.match(emptyArrayRegxp)) {\n              _ref = setEmptyArrayReference(_ref, prop);\n            } else if(prop.match(indexArrayRegxp)) {\n               _ref = setArrayReferenceAtPosition(_ref, prop);\n            } else {\n              if(_ref instanceof Array) {\n                const element = {\n                  [prop]:{}\n                };\n                _ref.push(element);\n                _ref = element[prop];\n              } else {\n                _ref[prop] = {};\n                _ref = _ref[prop];\n              }\n            }\n          }\n        }\n    });\n\n  } else {\n    throw 'propertyName must be a string and lenght > 0';\n  }\n};\n","import { emptyArrayRegxp, indexArrayRefRegxp, indexArrayRegxp, numberRegex, arrayBrackets } from '../shared/regex.expressions';\nimport { getIndexFromPropName } from '../shared/helpers';\n\nexport const getArrayAtPosition = (ref, propertyName) => {\n  const propIndex = getIndexFromPropName(propertyName);\n  const cleanPropName = propertyName.replace(indexArrayRegxp, '');\n\n  if(ref[cleanPropName] instanceof Array &&\n    ref[cleanPropName].length > 0 &&\n    propIndex <= ref[cleanPropName].length\n   ) {\n     return ref[cleanPropName][propIndex];\n  }\n};\n\nexport const getArrayRef = (ref, propertyName) => {\n  const arrayProperty = propertyName.replace(emptyArrayRegxp, '');\n  return getArrayAtPosition(ref, arrayProperty);\n};\n\nexport const getProperty = (ref, propertyName = '') => {\n  if(ref === null || typeof ref === 'undefined') {\n    return null;\n  }\n  const props = propertyName.split('.');\n\n  if (typeof ref === 'object' && (ref instanceof Array) === false) {\n    let _ref = ref;\n    // pending important change.\n    // as soon as we hit undefined we should exit the loop.\n    props.forEach((prop) => {\n      if(typeof _ref !== 'undefined' && _ref.hasOwnProperty(prop) === false && prop.match(indexArrayRegxp)) {\n        _ref = getArrayAtPosition(_ref, prop);\n      } else if (typeof _ref !== 'undefined' && prop.match(indexArrayRefRegxp)) {\n        _ref = getArrayRef(_ref, prop);\n      } else if (typeof _ref !== 'undefined' && _ref.hasOwnProperty(prop)) {\n        _ref = _ref[prop];\n      } else {\n        _ref = undefined;\n      }\n    });\n    return _ref;\n  }\n};\n","import { getProperty } from './get/get.helpers';\n// make a log available for debbuging\nexport const deepifyGet = (obj, prop) => {\n  return getProperty(obj, prop);\n};\n","import { isMutable, deepCopy, setProperty } from './set/set.helpers';\n\nconst deepifyConfiguration = {\n  mutate: false,\n  configure: function(mutate) {\n    this.mutate = mutate;\n  }\n};\n\nexport const deepifySet = (objRef, property, value, mutate) => {\n  if (typeof property === 'string' && property.length > 0) {\n    const ref = isMutable(mutate, deepifyConfiguration) ? objRef : deepCopy(objRef);\n    if (ref !== null) {\n      setProperty(ref, property, value);\n    }\n    return ref;\n  }\n  return objRef;\n};\n","import { deepifySet as _set } from './deepifySet';\nimport { deepifyGet as _get } from './deepifyGet';\n\nexport const deepifySet = _set;\nexport const deepifyGet = _get;\n"],"sourceRoot":""}